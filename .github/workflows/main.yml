name: Package One .XRNX Each

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  package-and-release:
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Create .release.xrnx packages for each .xrnx folder
      - name: Zip XRNX Packages
        run: |
          mkdir -p xrnx_packages
          for xrnx_dir in *.xrnx; do
            if [ -d "$xrnx_dir" ]; then
              output_name=$(basename "$xrnx_dir" .xrnx).release.xrnx
              echo "Zipping $xrnx_dir into $output_name..."
              zip -r "./xrnx_packages/$output_name" "$xrnx_dir"/*
            fi
          done

      # Dynamically generate a tag name in the format yyyy-mm-dd_hh-mm-ss
      - name: Generate Tag Name
        run: echo "TAG_NAME=$(date +'%Y-%m-%d_%H-%M-%S')" >> $GITHUB_ENV

      # Create and push a Git tag
      - name: Create and Push Tag
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git tag $TAG_NAME
          git push origin $TAG_NAME
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Create a GitHub release
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.TAG_NAME }}
          release_name: Release ${{ env.TAG_NAME }}
          draft: false
          prerelease: false

      # Upload each .release.xrnx package to the release
      - name: Upload kschzt.genq.release.xrnx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./xrnx_packages/kschzt.genq.release.xrnx
          asset_name: kschzt.genq.release.xrnx
          asset_content_type: application/octet-stream

      - name: Upload kschzt.test.release.xrnx
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./xrnx_packages/kschzt.test.release.xrnx
          asset_name: kschzt.test.release.xrnx
          asset_content_type: application/octet-stream
